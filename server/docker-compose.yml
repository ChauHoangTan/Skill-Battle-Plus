version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - backend
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - eureka-service
      - user-service
      - quiz-service
      - question-service
      - notification-service
      - exam-service
      - battle-service
      - auth-service
      - analytics-service
      - admin-service
    networks:
      - backend

  eureka-service:
    build:
      context: .           # context là project-root, nơi có pom.xml
      dockerfile: eureka-service/Dockerfile
    ports:
      - "8761:8761"
    networks:
      - backend

  user-service:
    build:
      context: .           # context là project-root, nơi có pom.xml
      dockerfile: user-service/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - user-db
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/userdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672

  user-db:
    image: postgres:17
    container_name: user-db
    restart: always
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5433:5432"
    networks:
      - backend

  quiz-service:
    build:
      context: .           # context là project-root, nơi có pom.xml
      dockerfile: quiz-service/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - quiz-db
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://quiz-db:5432/quizdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672

  quiz-db:
    image: postgres:17
    container_name: quiz-db
    restart: always
    environment:
      POSTGRES_DB: quizdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5434:5432"
    networks:
      - backend

  question-service:
    build:
      context: .           # context là project-root, nơi có pom.xml
      dockerfile: question-service/Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - question-db
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://question-db:5432/questiondb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672

  question-db:
    image: postgres:17
    container_name: question-db
    restart: always
    environment:
      POSTGRES_DB: questiondb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5435:5432"
    networks:
      - backend

  notification-service:
    build:
      context: .           # context là project-root, nơi có pom.xml
      dockerfile: notification-service/Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - notification-db
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notification-db:5432/notificationdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672

  notification-db:
    image: postgres:17
    container_name: notification-db
    restart: always
    environment:
      POSTGRES_DB: notificationdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5436:5432"
    networks:
      - backend

  exam-service:
    build:
      context: .           # context là project-root, nơi có pom.xml
      dockerfile: exam-service/Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - exam-db
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://exam-db:5432/examdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672

  exam-db:
    image: postgres:17
    container_name: exam-db
    restart: always
    environment:
      POSTGRES_DB: examdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5437:5432"
    networks:
      - backend

  battle-service:
    build:
      context: .           # context là project-root, nơi có pom.xml
      dockerfile: battle-service/Dockerfile
    ports:
      - "8086:8086"
    depends_on:
      - battle-db
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://exam-db:5432/battledb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672

  battle-db:
    image: postgres:17
    container_name: battle-db
    restart: always
    environment:
      POSTGRES_DB: battledb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5438:5432"
    networks:
      - backend

  auth-service:
    build:
      context: .           # context là project-root, nơi có pom.xml
      dockerfile: auth-service/Dockerfile
    ports:
      - "8087:8087"
    depends_on:
      auth-db:
        condition: service_healthy
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/authdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379

  auth-db:
    image: postgres:17
    container_name: auth-db
    restart: always
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5439:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d authdb" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  analytics-service:
    build:
      context: .           # context là project-root, nơi có pom.xml
      dockerfile: analytics-service/Dockerfile
    ports:
      - "8088:8088"
    depends_on:
      - analytics-db
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://analytics-db:5432/analyticsdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672

  analytics-db:
    image: postgres:17
    container_name: analytics-db
    restart: always
    environment:
      POSTGRES_DB: analyticsdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5440:5432"
    networks:
      - backend

  admin-service:
    build:
      context: .           # context là project-root, nơi có pom.xml
      dockerfile: admin-service/Dockerfile
    ports:
      - "8089:8089"
    depends_on:
      - admin-db
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://analytics-db:5432/admindb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672

  admin-db:
    image: postgres:17
    container_name: admin-db
    restart: always
    environment:
      POSTGRES_DB: admindb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5441:5432"
    networks:
      - backend

networks:
  backend:

volumes:
  rabbitmq_data:
